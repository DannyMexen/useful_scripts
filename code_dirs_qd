#!/usr/bin/zsh

# CODE_DIR_QD - Quick and Dirty
# Smaller scoped version of code_dir
# Create Code/* directories for storing source files
# - Learning
# - Development
# - Testing
# - Experimental
# - Prototypes
# - Boilerplate
# Daniel M. Mwale
# mwaled@napsa.co.zm
# 2021-09-20
# Version 1.0.0

# Steps
# Change directory to $HOME
# Check if ~/Code exists
# Create ~/Code/*
# (where * represents the directories listed above)

code_root=$HOME/Code
learning=$code_root/Learning
development=$code_root/Development
testing=$code_root/Testing
experimental=$code_root/Experimental
prototypes=$code_root/Prototypes
boilerplate=$code_root/Boilerplate

# Step 1 - Change directory to $HOME

change_directory() {

    print Changing directory...
    cd $HOME
    print Temporarily in $HOME

}

# Step 2 - Check if $HOME/Code exists
check_code_root() {
    print Checking existence of $code_root...

    if [[ -d $code_root ]]; then
        print Found. Changing directory...
        cd $code_root
    else
        print Not found. Creating directory $code_root...
        create_code_root
    fi
}

        # Step 3 - Create directory $HOME/Code
        create_code_root() {
            mkdir $code_root
        }

# Step 4 - Check and/or create directories
create_code_directories() {

    cd $code_root
    print Checking existence of directories...

    if [[ -d  $learning ]]; then
        print Found $learning. Skipping...
    else
        print Not found. Creating directory $learning...
        create_learning
    fi

    if [[ -d  $development ]]; then
        print Found $development. Skipping...
    else
        print Not found. Creating directory $development...
        create_development
    fi

    if [[ -d  $testing ]]; then
        print Found $testing. Skipping...
    else
        print Not found. Creating directory $testing...
        create_testing
    fi

    if [[ -d  $experimental ]]; then
        print Found $experimental. Skipping...
    else
        print Not found. Creating directory $experimental...
        create_experimental
    fi

    if [[ -d  $prototypes ]]; then
        print Found $prototypes. Skipping...
    else
        print Not found. Creating directory $prototypes...
        create_prototypes
    fi

    if [[ -d  $boilerplate ]]; then
        print Found $boilerplate. Skipping...
    else
        print Not found. Creating directory $boilerplate...
        create_boilerplate
    fi

}

create_readme() {
    cd $code_root
    print Creating blank file README.md...
    touch README.md
}

# Create Directory functions
create_learning() {
        mkdir $learning
}

create_development() {
        mkdir $development
}

create_testing() {
        mkdir $testing
}

create_experimental() {
        mkdir $experimental
}

create_prototypes() {
        mkdir $prototypes
}

create_boilerplate() {
        mkdir $boilerplate
}

# Begin script execution
change_directory
check_code_root
create_code_directories
create_readme

print Run ls $code_root to confirm creation of directories
